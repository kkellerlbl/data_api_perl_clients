language: perl
perl:
  - "5.16"

addons:
  apt:
    packages:
      - python-virtualenv

sudo: false

# cache:
#  directories:
## need to find this cache dir, likely not in $HOME
#    - $HOME/.cache/pip

env:
  - KB_DEPLOY_URL="dir_cache"
  - KB_DEPLOY_URL="dir_nocache"
#  - KB_REDIS_HOST=localhost; KB_NOSE_CFG=nose-ci.cfg
#  - KB_REDIS_HOST="";        KB_NOSE_CFG=nose-ci.cfg

before_install:
  - cd ..
#  - git clone -b develop https://github.com/kbase/data_api.git core-develop
  - git clone -b getFeatureTypeFix https://github.com/kkellerlbl/data_api.git core-develop
  - ( cd core-develop && git submodule init && git submodule update )
# need the core for starting services
  - cd core-develop
  - virtualenv venv
  - source venv/bin/activate
  - pip install -r requirements.txt
  - python setup.py install -vv
#  - redis-server redis.conf &

install:
# build the codecov module
  - cd ../data_api_perl_clients
  - cpanm  --notest --skip-satisfied Devel::Cover Devel::Cover::Report::Codecov
  - perl Build.PL
  - ./Build installdeps --cpan-client 'cpanm'
  - ./Build install --cpan-client 'cpanm'

before_script:
# start redis
  - redis-server redis.conf &
# start API services
  - cd ../core-develop
  - data_api_start_service.py --service taxon --kbase_url $KB_DEPLOY_URL --config ../core-develop/deployment.cfg > taxonAPI.out 2> taxonAPI.err &
  - data_api_start_service.py --service assembly --kbase_url $KB_DEPLOY_URL --config deployment.cfg > assemblyAPI.out 2> assemblyAPI.err &
  - data_api_start_service.py --service genome_annotation --kbase_url $KB_DEPLOY_URL --config deployment.cfg > genome_annotationAPI.out 2> genome_annotationAPI.err &
##  - data_api_start_service.py --service genomeannotation --config deployment.cfg > genomeannotationAPI.out &
  - sleep 5
  - cd ../data_api_perl_clients

script:
  - printf "PERL5LIB = $PERL5LIB \n"
# see if perl client scripts work (plus timings)
  - ./bin/taxon_client_driver.pl --url http://localhost:9101 2> taxonPerlClient.out
  - ./bin/assembly_client_driver.pl --url http://localhost:9102 2> assemblyPerlClient.out
  - ./bin/genome_annotation_client_driver.pl --url http://localhost:9103 2> genome_annotationPerlClient.out
# see if python clients work (plus timings)
  - assembly_client_driver.py > assemblyPythonClient.out
  - taxon_client_driver.py > taxonPythonClient.out
#  - genome_annotation_client_driver.py > genome_annotationPythonClient.out
# do actual tests, with coverage
  - cover -test -ignore .pm -select ClientAPI.pm

after_success:
  - cover -report codecov
  - redis-cli info keystore
  - cat assemblyPythonClient.out
  - cat assemblyPerlClient.out
  - cat taxonPythonClient.out
  - cat taxonPerlClient.out
# too big?
#  - cat genome_annotationPythonClient.out
# too big?
#  - cat genome_annotationPerlClient.out
# clean up after services
  - cd ../core-develop
  - kill $(cat taxonAPI.pid)
  - kill $(cat assemblyAPI.pid)
  - kill $(cat genome_annotationAPI.pid)
# Make service logs easy to inspect, then clean up
# only do in after_failure
#  - cat assemblyAPI.out
#  - cat assemblyAPI.err
#  - cat taxonAPI.out
#  - cat taxonAPI.err
#  - cat genome_annotationAPI.out
#  - cat genome_annotationAPI.err
  - rm -f taxonAPI.* assemblyAPI.* genome_annotationAPI.*

after_failure:
  - redis-cli info keystore
  - cat assemblyPythonClient.out
  - cat assemblyPerlClient.out
  - cat taxonPythonClient.out
  - cat taxonPerlClient.out
# too big?
#  - cat genome_annotationPythonClient.out
# too big?
#  - cat genome_annotationPerlClient.out
# clean up after services
  - cd ../core-develop
  - kill $(cat taxonAPI.pid)
  - kill $(cat assemblyAPI.pid)
  - kill $(cat genome_annotationAPI.pid)
# Make service logs easy to inspect, then clean up
  - cat assemblyAPI.out
  - cat assemblyAPI.err
  - cat taxonAPI.out
  - cat taxonAPI.err
  - cat genome_annotationAPI.out
  - cat genome_annotationAPI.err
  - rm -f taxonAPI.* assemblyAPI.* genome_annotationAPI.*
